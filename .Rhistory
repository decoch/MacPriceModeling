first_data <- read.csv(file = "mac_price_150717.csv", fileEncoding = "utf-8") # import
pwd
cd
pwd
first_data <- read.csv(file = "/Users/akifumi.tominaga/Desktop/課題2_macbookの価格モデリング/data/mac_price_150717.csv", fileEncoding = "utf-8") # import
install.packages("devtools")
devtools::install_github("plotly/R-api")
library("devtools")
install_github("ropensci/plotly")
hepl(plotly)
help(plotly)
help(plotly)
help('plotly')
plotly::>
plotly?
exit
plotly::plotly()
plotly
library(plotly)
plot(first_data["price"], first_data["weight"]);
plot(first_data[,c("price")], first_data[,c("weight")]);
barplot(first_data)
install.packages("ggplot2", dependencies=TRUE)
install.packages("ggplot2", dependencies=TRUE)
install.packages("ggplot2", dependencies = TRUE)
library(ggplot2)
View(first_data)
g <- ggplot(
first_data,                    # ggplot 用データフレーム
aes (                  # ggplot オプション設定
x = product,           # x 軸を df$group とする
y = price,          # y 軸を df$length とする
#    fill = group         # df$group に従ってグループ分ける
)
)
plot(g)
g <- g + geom_bar(                    # plotbarに当たる関数
width = 0.8,                        # 棒の幅
stat = "identity"
)
g <- g + xlab("Groups")            # x 軸名
g <- g + ylab("Length (cm)")       # y 軸名
g <- g + ggtitle("Seeds Height")   # グラフ名
plot(g)
help()
help(colnames)
df <- data.frame(product = first_data['product'], length = colMeans(data, na.rm = T))
df <- data.frame(product = first_data['product'], price =first_data['price']
df
df <- data.frame(product = first_data['product'], price =first_data['price'])
df
View(first_data)
View(first_data)
View(df)
View(df)
g <- ggplot(
df,                    # ggplot 用データフレーム
aes (                  # ggplot オプション設定
x = id,           # x 軸を df$group とする
y = price,          # y 軸を df$length とする
#    fill = group         # df$group に従ってグループ分ける
)
)
plot(g)
g <- g + geom_bar(                    # plotbarに当たる関数
width = 0.8,                        # 棒の幅
stat = "identity"
)
g <- g + xlab("Groups")            # x 軸名
g <- g + ylab("Length (cm)")       # y 軸名
g <- g + ggtitle("Seeds Height")   # グラフ名
plot(g)
g <- ggplot(
df,                    # ggplot 用データフレーム
aes (                  # ggplot オプション設定
x = first_data['1'],           # x 軸を df$group とする
y = price          # y 軸を df$length とする
#    fill = group         # df$group に従ってグループ分ける
)
)
g <- g + geom_bar(                    # plotbarに当たる関数
width = 0.8,                        # 棒の幅
stat = "identity"
)
g <- g + xlab("Groups")            # x 軸名
g <- g + ylab("Length (cm)")       # y 軸名
g <- g + ggtitle("Seeds Height")   # グラフ名
plot(g)
View(first_data)
View(df)
g <- ggplot(
df,                    # ggplot 用データフレーム
aes (                  # ggplot オプション設定
x = product,           # x 軸を df$group とする
y = price          # y 軸を df$length とする
#    fill = group         # df$group に従ってグループ分ける
)
)
g <- g + geom_bar(                    # plotbarに当たる関数
width = 0.8,                        # 棒の幅
stat = "identity"
)
g <- g + xlab("Groups")            # x 軸名
g <- g + ylab("Length (cm)")       # y 軸名
g <- g + ggtitle("Seeds Height")   # グラフ名
plot(g)
library(dplyr)
install.packages('dplyr')
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
first_data %>%
sselect('product', 'price') %>%
head()
first_data %>%
select('product', 'price') %>%
head()
first_data %>%
group_by(product)
first_data %>%
select(product, price) %>%
filter(product == "macbook" or product == "macbook_air")
first_data %>%
select(product, price)
first_data %>%
select(product, price)
first_data %>%
select(product, price) %>%
filter(product == "macbook")
first_data %>%
select(product, price) %>%
filter(product == "macbook" | product =="test")
first_data %>%
select(product, price) %>%
filter(product == "macbook" | product =="macbook_air" | product == "macbook_pro")
df <- first_data %>%
select(product, price) %>%
filter(product == "macbook" | product =="macbook_air" | product == "macbook_pro") %>%
df <- first_data %>%
e
df <- first_data %>%
select(product, price) %>%
filter(product == "macbook" | product =="macbook_air" | product == "macbook_pro")
df
g <- ggplot(
df,                    # ggplot 用データフレーム
aes (                  # ggplot オプション設定
x = product,           # x 軸を df$group とする
y = price          # y 軸を df$length とする
#    fill = group         # df$group に従ってグループ分ける
)
)
g <- g + geom_bar(                    # plotbarに当たる関数
width = 0.8,                        # 棒の幅
stat = "identity"
)
g <- g + xlab("Groups")            # x 軸名
g <- g + ylab("Length (cm)")       # y 軸名
g <- g + ggtitle("Seeds Height")   # グラフ名
plot(g)
df <- data.frame(product = first_data['product'], price =first_data['price'])
dflibrary(dplyr)
##    group   length
## At    At 1.043846
## S5    S5 2.520769
## S4    S4 3.373333
## S3    S3 4.556923
## S2    S2 4.610833
g <- ggplot(
df,                    # ggplot 用データフレーム
aes (                  # ggplot オプション設定
x = product,           # x 軸を df$group とする
y = price          # y 軸を df$length とする
#    fill = group         # df$group に従ってグループ分ける
)
)
g <- g + geom_bar(                    # plotbarに当たる関数
width = 0.8,                        # 棒の幅
stat = "identity"
)
g <- g + xlab("Groups")            # x 軸名
g <- g + ylab("Length (cm)")       # y 軸名
g <- g + ggtitle("Seeds Height")   # グラフ名
plot(g)
df <- data.frame(product = first_data['product'], price =first_data['price'])
dflibrary(dplyr)
g <- ggplot(
df,                    # ggplot 用データフレーム
aes (                  # ggplot オプション設定
x = product,           # x 軸を df$group とする
y = price          # y 軸を df$length とする
#    fill = group         # df$group に従ってグループ分ける
)
)
library(ggplot2)
g <- ggplot(
df,                    # ggplot 用データフレーム
aes (                  # ggplot オプション設定
x = product,           # x 軸を df$group とする
y = price          # y 軸を df$length とする
#    fill = group         # df$group に従ってグループ分ける
)
)
plot(g)
g <- g + geom_bar(                    # plotbarに当たる関数
width = 0.8,                        # 棒の幅
stat = "identity"
)
g <- g + xlab("Groups")            # x 軸名
g <- g + ylab("Length (cm)")       # y 軸名
g <- g + ggtitle("Seeds Height")   # グラフ名
plot(g)
df <- first_data %>%
select(product, price) %>%
filter(product == "macbook" | product =="macbook_air" | product == "macbook_pro")
# data preparation
g <- ggplot(
df,                    # ggplot 用データフレーム
aes (                  # ggplot オプション設定
x = product,           # x 軸を df$group とする
y = price          # y 軸を df$length とする
)
#    fill = group         # df$group に従ってグループ分ける
)
g <- g + geom_bar(                    # plotbarに当たる関数
width = 0.8,                        # 棒の幅
stat = "identity"
)
g <- g + xlab("Groups")            # x 軸名
g <- g + ylab("Length (cm)")       # y 軸名
g <- g + ggtitle("Seeds Height")   # グラフ名
plot(g)
df
df %>%
group_by(product) %>%
help(average)
help("dplyr")
help("average")
help("summurize")
##============================================
## info
##============================================
## result
##============================================
## setting
##============================================
library(ggplot2)
library(dplyr)
first_data <- read.csv(file = "/Users/akifumi.tominaga/Desktop/課題2_macbookの価格モデリング/data/mac_price_150717.csv", fileEncoding = "utf-8") # import
## first task
##============================================
# df
df <- first_data %>%
select(product, price) %>%
filter(product == "macbook" | product =="macbook_air" | product == "macbook_pro")
# add product_detail and product_category to df
price_df<-transform(df,product_detail=c(
"01_macbook_low",
"02_macbook_high",
"03_macbook_air_11inch_low",
"04_macbook_air_11inch_high",
"05_macbook_air_13inch_low",
"06_macbook_air_13inch_high",
"07_macbook_pro_13inch",
"08_macbook_pro_retina_13inch_low",
"09_macbook_pro_retina_13inch_middle",
"10_macbook_pro_retina_13inch_high",
"11_macbook_pro_retina_15inch_low",
"12_macbook_pro_retina_15inch_high"
))
price_df<-transform(price_df,product_category=c(
"macbook",
"macbook",
"macbook_air_11inch",
"macbook_air_11inch",
"macbook_air_13inch",
"macbook_air_13inch",
"macbook_pro_13inch",
"macbook_pro_retina_13inch",
"macbook_pro_retina_13inch",
"macbook_pro_retina_13inch",
"macbook_pro_retina_15inch",
"macbook_pro_retina_15inch"
))
# ggplot create data frame
g <- ggplot(
price_df,                  # ggplot dataframe
aes (                      # ggplot set option
x = product_detail,
y = price,
fill = product_category  # color by product_category
)
)
# graph_design
g <- g + theme(axis.text.x = element_text(angle = 45, hjust = 1)) # setting angle of x-axis text
g <- g + geom_bar(
width = 0.8,               # bar width
stat = "identity"
)
g <- g + xlab("product_detail")                # name of x-axis
g <- g + ylab("Price(yen)")                    # name of y-axis
g <- g + ggtitle("Compare prices of MacBook")  # name of graph
plot(g)
library(MuMIn)
?dredge
reg0<-lm(rent~1,dat0)
library(dplyr)
help("dplyr"["filter"])
help("dplyr"[filter])
help("filter")
?filter
y<- price
y<- first_data["price"]
View(y)
##============================================
## info
##============================================
## result
##============================================
## setting
##============================================
library(ggplot2)
library(dplyr)
first_data <- read.csv(file = "/Users/akifumi.tominaga/Desktop/課題2_macbookの価格モデリング/data/mac_price_150717.csv", fileEncoding = "utf-8") # import
## first task
##============================================
# df
df <- first_data %>%
select(product, price) %>%
filter(product == "macbook" | product =="macbook_air" | product == "macbook_pro")
# add product_detail and product_category to df
price_df<-transform(df,product_detail=c(
"01_macbook_low",
"02_macbook_high",
"03_macbook_air_11inch_low",
"04_macbook_air_11inch_high",
"05_macbook_air_13inch_low",
"06_macbook_air_13inch_high",
"07_macbook_pro_13inch",
"08_macbook_pro_retina_13inch_low",
"09_macbook_pro_retina_13inch_middle",
"10_macbook_pro_retina_13inch_high",
"11_macbook_pro_retina_15inch_low",
"12_macbook_pro_retina_15inch_high"
))
price_df<-transform(price_df,product_category=c(
"macbook",
"macbook",
"macbook_air_11inch",
"macbook_air_11inch",
"macbook_air_13inch",
"macbook_air_13inch",
"macbook_pro_13inch",
"macbook_pro_retina_13inch",
"macbook_pro_retina_13inch",
"macbook_pro_retina_13inch",
"macbook_pro_retina_15inch",
"macbook_pro_retina_15inch"
))
# ggplot create data frame
g <- ggplot(
price_df,                  # ggplot dataframe
aes (                      # ggplot set option
x = product_detail,
y = price,
fill = product_category  # color by product_category
)
)
# graph_design
g <- g + theme(axis.text.x = element_text(angle = 45, hjust = 1)) # setting angle of x-axis text
g <- g + geom_bar(
width = 0.8,               # bar width
stat = "identity"
)
g <- g + xlab("product_detail")                # name of x-axis
g <- g + ylab("Price(yen)")                    # name of y-axis
g <- g + ggtitle("Compare prices of MacBook")  # name of graph
plot(g)
## task2
##============================================
install.packages("MuMIn")
library(MuMIn)
y<- first_data["price"]
# set explanatory variable
x1<-first_data["display_type"]
x2<-first_data["display_size"]
x3<-first_data["size"]
x4<-first_data["weight"]
x5<-first_data["memory_size"]
x6<-first_data["gpu"]
x7<-first_data["gpu-cnt"]
x8<-first_data["cpu"]
x9<-first_data["cpu_clock"]
x10<-first_data["strage_type"]
x11<-first_data["strage_volume"]
model1<-lm(y~x1)      # モデル1　x1だけを使ってyを計算
model2<-lm(y~x1+x2)   # モデル2　x1とx2の両方を使ってモデリング
model3<-lm(y~x1*x2)   # モデル3　x1とx2の交互作用も入れてモデリング
summary(model3)
anova(model2,model3) # Pr(>F) 誤差の大きさ
anova(model1,model2)
AIC(model1)
AIC(model2)
AIC(model3)
# AICが一番小さいものが良いモデル
model.best1<-step(model3)
model.best1
library(MuMIn)
options(na.action = "na.fail")   #  prevent fitting models to different datasets
kekka.AIC<-dredge(model3,rank="AICc")
kekka.AIC
# AIC 最小モデルを引っ張ってくるには
all.model <- get.models(kekka.AIC)
best.model<-all.model[1]
best.model
# Example from Burnham and Anderson (2002), page 100:
# data(Cement)
# options(na.action = "na.fail")   #  prevent fitting models to different datasets
# fm1 <- lm(y ~ ., data = Cement)
# dd <- dredge(fm1)
avg.model<-model.avg(get.models(kekka.AIC, subset = delta < 4))
avg.model
summary(avg.model)
library(MuMIn)
set.seed(0)
N<-100
Intercept<-5
B1<-10
B2<-5
x1<-sort(rnorm(N,sd=2))
x2<-rnorm(N,sd=2)
e<-rnorm(n=N,sd=3)
y<-Intercept+B1*x1+B2*x2+e
model3<-lm(y~x1*x2)
kekka.AIC<-dredge(model3,rank="AIC")
all.model <- get.models(kekka.AIC)
best.model<-all.model[1]
best.model
# Mixed models:
# if(require(nlme)) {
#   fm2 <- lme(distance ~ age + Sex, data = Orthodont,
#              random = ~ 1 | Subject, method = "ML")
#   ms2 <- dredge(fm2)
# Get top-most models, but fitted by REML:
#   (confset.d4 <- get.models(ms2, subset = delta < 4, method = "REML"))
# }
View(first_data)
model1<-lm(first_data['price']~first_data['memory_size'])
first_data['price']
y = first_data["price"]
y
x1 <- first_data["memory_size"]
x1
model1<-lm(y~x1)
